{"version":3,"sources":["store/actions/auth.js","store/actions/actionTypes.js","containers/TopBar/TopBar.js","containers/SideBar/SideBar.js","containers/GeneralFeeds/GeneralFeeds.js","containers/PersonalFeeds/PersonalFeeds.js","containers/HomePage/HomePage.js","containers/Login/Login.js","containers/ComPost/ComPost.js","containers/Post/Post.js","containers/Community/Community.js","containers/UserPage/UserPage.js","containers/Register/Register.js","App.js","store/utility.js","store/reducers/auth.js","store/reducers/userDetails.js","index.js","containers/HomePage/HomePage.module.css","containers/TopBar/TopBar.module.css","containers/SideBar/SideBar.module.css","containers/UserPage/UserPage.module.css","containers/Community/Community.module.css","containers/ComPost/ComPost.module.css","img/Abortion.jpg","img/Air.jpg","img/Addison.jpg"],"names":["authSuccess","token","userId","name","console","log","type","idToken","logout","localStorage","removeItem","auth","username","password","isSignup","dispatch","authData","returnSecureToken","axios","post","then","response","expirationDate","Date","getTime","setItem","data","catch","err","error","authCheckState","expirationTime","getItem","setTimeout","TopBar","submissionThrottle","e","setState","search","target","value","show","state","length","xhr","XMLHttpRequest","url","encodeURIComponent","trim","onreadystatechange","readyState","status","this","recData","JSON","parse","responseText","bind","open","send","hide","subscribe","id","props","hit","activeElement","notLoggedIn","to","loggedIn","isAuthenticated","onTryAutoSignup","classList","classes","container","push","list","map","val","ind","key","activeStyle","color","className","linkers","exact","recommender","recDiv","onMouseOver","throttleList","onClick","communityID","toggleSideBar","HomeOutlined","style","marginLeft","searchInput","placeholder","onChange","onFocus","position","right","CloseOutlined","topBar","onTryLogout","Component","withRouter","connect","actions","SideBar","handlePageChange","recommend","get","details","sideBar","Show","Hide","active","backgroundColor","PersonalFeeds","getPersonalFeed","feedData","feeds","len","i","loading","handleScroll","element","scrollHeight","scrollTop","clientHeight","window","addEventListener","personalContent","unitCard","feedList","onScroll","feedContainer","String","HomePage","getReco","resp","comList","recommended","result","removeEventListener","content","path","component","GeneralFeeds","recContent","CircularProgress","root","recFeedList","Auth","controls","elementType","elementConfig","validation","required","isUsername","valid","touched","minLength","close","handleOpen","handleClose","history","inputChangedHandler","event","controlName","updatedControls","checkValidity","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","buildingBurger","authRedirectPath","onSetAuthRedirectPath","rules","isValid","maxLength","isEmail","test","isNumeric","formElementsArray","config","form","formElement","TextField","label","textField","margin","Typography","variant","fontFamily","Button","button","errorMessage","message","Modal","aria-labelledby","aria-describedby","modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","onSubmit","withStyles","theme","fontWeight","display","flexWrap","padding","width","alignItems","justifyContent","PostCard","postCard","elevation","square","mainSpan","detSpan","detVal","author","Divider","time","React","Post","msg","postData","Axios","onMouseOut","height","multiline","clicked","activePost","flexDirection","Community","getPosts","posts","handlePost","showPost","togglePost","about","imageList","title","abo","air","add","communityDetails","slice","infoPaper","userDetails","userFeats","listStyle","boxDetails","backgroundImage","ComPost","by","naviGate","navItems","textDecoration","match","m","postVal","postIcon","PostAdd","Cancel","Fab","checked","postComponent","UserPage","getBioDetails","oldLoad","oldState","bioDetails","getBioImg","bioImg","getRightSide","rightSide","infoContainer","communityPage","Register","adresss","email","phone","city","age","handleSubmit","handleChange","address","responseData","userData","sessionStorage","Grid","spacing","item","xs","sm","fullWidth","rowsMax","left","noValidate","autoComplete","App","showSideBar","mainBody","Login","render","updateObject","oldObject","updatedProperties","initialState","authStart","action","authFail","authLogout","setAuthRedirectPath","reducer","groupList","friendList","groupId","groupDetails","friendDetails","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","userReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9c19b6d5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\nimport { timeout } from 'q';\r\n\r\nexport const authStart = () => {\r\n    console.log(\"AUTH STARTED\");\r\n\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId, name) => {\r\n    console.log('AUTH SUCCESS')\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,// maybe userId can be here\r\n        userId: userId,// maybe use username here\r\n        name: name\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('name');\r\n    console.log(\"LOGOUT\")\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1);\r\n    };\r\n};\r\n\r\nexport const auth = (username, password, isSignup) => {\r\n    return dispatch => {\r\n\r\n        dispatch(authStart());\r\n\r\n        const authData = {\r\n            username: username,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        \r\n        let url = 'http://localhost:5000/api/v1/login';\r\n\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            \r\n            const expirationDate = new Date(new Date().getTime() + 1000000)\r\n\r\n            localStorage.setItem(\"userId\", response.data.userId);\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            localStorage.setItem(\"name\", response.data.name);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n\r\n            dispatch(authSuccess(response.data.token, response.data.userId, response.data.name));\r\n\r\n        })\r\n        .catch(err => {\r\n            \r\n            if(err.response)\r\n                dispatch(authFail(err.response.data.error));\r\n\r\n        });\r\n\r\n        // temp.\r\n      }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(\"[TOKEN] : \",token)\r\n        if (!token) {\r\n            console.log(\"LOGOUT_HO RHA H\")\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const name = localStorage.getItem(\"name\");\r\n                dispatch(authSuccess(token, userId, name));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime() + 1000000) ));\r\n            }   \r\n        }\r\n    };\r\n};","\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n\r\n/* start user functions */\r\n\r\nexport const GROUP_LIST = 'GROUP_LIST'\r\nexport const FRIEND_LIST = 'FRIEND_LIST'\r\nexport const ADD_FRIEND = 'ADD_FRIEND'\r\nexport const ADD_TRIP = 'ADD_TRIP'\r\nexport const ADD_GROUP = 'ADD_GROUP'\r\n\r\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND'\r\nexport const REMOVE_GROUP = 'REMOVE_GROUP'\r\nexport const REMOVE_TRIP = 'REMOVE_TRIP'\r\n\r\n\r\nexport const FETCH_GROUPS_SUCCESS = 'FETCH_GROUPS_SUCCESS'\r\nexport const FETCH_FRIENDS_SUCCESS = 'FETCH_FRIENDS_SUCCESS'\r\n\r\nexport const FETCH_GROUPS_START = 'FETCH_GROUPS_START'\r\nexport const FETCH_FRIENDS_START = 'FETCH_FRIENDS_START'\r\n\r\n\r\nexport const FETCH_GROUP_DETAILS_START = 'FETCH_GROUP_DETAILS_START'\r\nexport const FETCH_GROUP_DETAILS_SUCCESS = 'FETCH_GROUP_DETAILS_SUCCESS'\r\n\r\n\r\nexport const ADD_FRIEND_TO_GROUP = 'ADD_FRIEND_TO_GROUP'\r\n\r\n\r\n\r\n\r\nexport const CLEAR_DETAILS = 'CLEAR_DETAILS'\r\n\r\n/* end of user functions */\r\n\r\n\r\n// export const GET_RECOMMENDATION = 'GET_RECOMMENDATION'","import React, { Component } from 'react';\r\nimport * as actions from '../../store/actions/index';\r\nimport classes from './TopBar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport { HomeOutlined, CloseOutlined } from '@material-ui/icons'\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass TopBar extends Component{\r\n\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        activeElement : 0,\r\n        search : '',\r\n        show : false,\r\n        recData : [],\r\n        notLoggedIn : [\r\n          {value : 'Login', to : '/login'},\r\n          {value : 'Register', to : '/register'}\r\n        ],\r\n        loggedIn : [\r\n          {value : 'Notification',to : '/user'},\r\n          {value : 'Messages',to : '/user'},\r\n          {value : 'Todo',to : '/user'},\r\n          // {value : 'Logout', to : '/logout'}\r\n        ]\r\n      }\r\n    }\r\n\r\n    submissionThrottle = (e) =>{\r\n      this.setState({\r\n        search : e.target.value,\r\n        show : true\r\n      })\r\n      console.log('[STATE] : ',this.state)\r\n      if(this.state.search.length < 3)\r\n        return 0;\r\n\r\n      \r\n\r\n      var xhr = new XMLHttpRequest()\r\n      console.log('here there werw')\r\n      let url = 'http://localhost:5000/api/v1/submission/' + encodeURIComponent(this.state.search.trim())\r\n      console.log(url)\r\n      xhr.onreadystatechange = function(){\r\n        if(xhr.readyState === 4 && xhr.status === 200){\r\n          \r\n          this.setState({\r\n            recData : JSON.parse(xhr.responseText)\r\n          })\r\n          console.log(this.state.recData)\r\n\r\n        }\r\n      }.bind(this)\r\n\r\n      xhr.open('GET',url,true)\r\n      xhr.send()\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      if(!this.props.isAuthenticated)\r\n        this.props.onTryAutoSignup()\r\n    }\r\n\r\n    hide = () =>{\r\n      console.log('here were')\r\n    }\r\n\r\n    subscribe = (id) =>{\r\n      this.setState({show:false})\r\n      console.log('[SUBSCRIBE] : ', id)\r\n\r\n      const url = 'http://localhost:5000/api/v1/subscribe'\r\n      axios.post(url,{\r\n        'username' : this.props.username,\r\n        'id' : id\r\n      }).then(response=>{\r\n\r\n      })\r\n\r\n    }\r\n\r\n    hit = () =>{\r\n      console.log('kill')\r\n    }\r\n\r\n    render(){\r\n\r\n      let classList = [classes.container]\r\n      if(this.props.isAuthenticated){\r\n        classList.push('container')\r\n      }\r\n\r\n      let list = null;\r\n\r\n      if(this.props.isAuthenticated){\r\n        list = \r\n            this.state.loggedIn.map((val,ind)=>{\r\n                return(\r\n                  <li key={ind}>\r\n                    <NavLink \r\n                    activeStyle={{ color : 'white' }}\r\n                    className={classes.linkers}\r\n                      exact to={val.to}>\r\n                      {val.value}\r\n                    </NavLink>\r\n                  </li>\r\n                )\r\n            })\r\n      }else{\r\n        list = \r\n          this.state.notLoggedIn.map((val,ind)=>{\r\n            return(\r\n              <li key={ind}>\r\n                <NavLink \r\n                activeStyle={{ color : 'white' }}\r\n                className={classes.linkers} \r\n                  exact to={val.to}>\r\n                  {val.value}\r\n                </NavLink>\r\n              </li>\r\n            )\r\n          })\r\n        \r\n      }\r\n\r\n\r\n      let recommender = null;\r\n      if(this.state.show && this.state.recData.length){\r\n        recommender = (\r\n\r\n          <div className={classes.recDiv} \r\n            onMouseOver={()=>this.setState({show : true})}>\r\n\r\n            <ul className={classes.throttleList}>\r\n              {this.state.recData.map((val,ind)=>{\r\n                return(\r\n                  <li key={ind}\r\n                  onClick={( ) => {this.subscribe(val.communityID)}}> \r\n                    {val.name} \r\n                  </li>\r\n                );\r\n\r\n              })}\r\n            </ul>\r\n\r\n          </div>\r\n\r\n        );\r\n      }else if(this.state.show){\r\n        recommender = (\r\n          <div className={classes.recDiv}>\r\n            <p> enter your desired community </p>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      return(\r\n        <div className={classes.container}>\r\n        <span onClick={this.props.toggleSideBar}><HomeOutlined /></span>\r\n        <input \r\n          style={{marginLeft:'100px'}}\r\n          className={classes.searchInput} placeholder=\"search\"\r\n          onChange={(e) => this.submissionThrottle(e)}\r\n          onFocus = { ()=>{this.setState({show : true}) } }\r\n          type=\"text\" value={this.state.search} />\r\n          \r\n          {(this.state.show) ? <span onClick={()=>this.setState({show : false})} style={{position:'relative',right:'30px'}}><CloseOutlined /></span> : null}\r\n\r\n          {recommender}\r\n          <ul className={classes.topBar}>\r\n            {list}\r\n            {((this.props.isAuthenticated) ? <li onClick={this.props.onTryLogout} className={classes.linkers}> Logout </li> : null)}\r\n\r\n          </ul>\r\n        </div>\r\n      )\r\n      \r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null,\r\n      username : state.auth.name\r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch( actions.authCheckState() ),\r\n        onTryLogout : () => dispatch( actions.logout() )\r\n    };\r\n};\r\n  \r\n\r\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( TopBar ) );","import React, { Component } from 'react';\r\nimport * as actions from '../../store/actions/index';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport classes from './SideBar.module.css';\r\nimport {Paper, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nclass SideBar extends Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        activeElement : 0,\r\n        details : [\r\n          {value : 'Home', to : '/'},\r\n          {value : 'User Page', to : '/user'},\r\n          // {value : 'General Feeds', to : '/generalFeeds'},\r\n          {value : 'Personal Feeds', to : '/personalFeeds'},\r\n        ]\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      if(!this.props.isAuthenticated)\r\n        this.props.onTryAutoSignup()\r\n    }\r\n\r\n    handlePageChange = (ind)=>{\r\n      this.setState({\r\n        activeElement : ind\r\n      })\r\n    }\r\n\r\n    recommend = () =>{\r\n      const url = 'http://localhost:5000/user_actions'\r\n      axios.get(url)\r\n    }\r\n\r\n    render(){\r\n\r\n      let classList = [classes.sideBar]\r\n      if(this.props.show){\r\n        classList.push(classes.Show)\r\n      }else{\r\n        classList.push(classes.Hide)\r\n      }\r\n      // console.log('[CLICKED] : ')\r\n      return(\r\n        <div className={classes.container}>\r\n          <h3 style={{color:'white'}}>MENU</h3>\r\n          <ul className={classes.sideBar}>\r\n            {\r\n              this.state.details.map((val,ind)=>{\r\n                let nameClass = ''\r\n                if(this.state.activeElement === ind){\r\n                  nameClass = classes.active\r\n                }\r\n                if(val.to !== '/'){\r\n                  return (\r\n                    <li key={ind}>\r\n                      <NavLink className={classes.linkers} activeStyle={{ backgroundColor:'tomato',color : 'white' }} to={val.to}>\r\n                        {val.value}\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }else{\r\n                  return (\r\n                    <li key={ind}>\r\n                      <NavLink className={classes.linkers} activeStyle={{ backgroundColor:'tomato',color : 'white' }} exact to={val.to}>\r\n                        {val.value}\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                }\r\n\r\n              })\r\n            }\r\n\r\n          </ul>\r\n        </div>\r\n      );\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n    };\r\n};\r\n  \r\n\r\n  \r\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( SideBar) );\r\n  ","import React, { Component } from 'react';\r\nimport { CircularProgress,Paper, Divider } from '@material-ui/core';\r\nimport classes from '../HomePage/HomePage.module.css';\r\nimport axios from 'axios';\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass PersonalFeeds extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            feeds : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        window.addEventListener('scroll', this.handleScroll, true);\r\n        let url = ''\r\n        url = 'http://localhost:5000/api/v1/generalFeeds/'\r\n        axios.post('http://localhost:5000/api/v1/clearScroll',{}).then(response=>{\r\n            this.getPersonalFeed(url);\r\n        })\r\n    }\r\n    \r\n\r\n    getPersonalFeed=(url)=>{\r\n\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState == 4 && xhr.status == 200){\r\n                \r\n                let feedData = [...this.state.feeds]\r\n                const data = JSON.parse(xhr.responseText)\r\n                const len = data.length\r\n\r\n                for(let i=0;i<len;i++){\r\n                    feedData.push(data[i])\r\n                }\r\n                this.setState({\r\n                    feeds : feedData,\r\n                    loading : false\r\n                })\r\n\r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        this.setState({\r\n            loading : true\r\n        })\r\n        xhr.send()\r\n\r\n    };\r\n\r\n    \r\n    handleScroll = e => {\r\n        let url = ''\r\n        url = 'http://localhost:5000/api/v1/generalFeeds/'\r\n        let element = e.target\r\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\r\n            this.getPersonalFeed(url)\r\n        }    \r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        let personalContent = null;\r\n\r\n        if(this.state.feeds.length){\r\n            personalContent = this.state.feeds.map((val,ind)=>{\r\n                return(\r\n                    <div key={ind} className={classes.unitCard}>\r\n                        <div>{val.name}</div>\r\n                        <div>{val.communityID}</div>\r\n                    </div>\r\n                )\r\n            })\r\n            personalContent = (\r\n                \r\n                <div className={classes.feedList} onScroll={this.handleScroll}>\r\n                    <h3> FEEDS</h3>\r\n                    <div className={classes.container}>{personalContent}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className={classes.feedContainer}>\r\n                {personalContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() ),\r\n    };\r\n  };\r\n  \r\n  export default ( connect( mapStateToProps, mapDispatchToProps )( PersonalFeeds ) );","import React, { Component } from 'react';\r\nimport { CircularProgress,Paper, Divider } from '@material-ui/core';\r\nimport classes from '../HomePage/HomePage.module.css';\r\nimport axios from 'axios';\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass PersonalFeeds extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            feeds : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if(!this.props.isAuthenticated){\r\n            this.props.onTryAutoSignup()\r\n        }\r\n        \r\n        window.addEventListener('scroll', this.handleScroll, true);\r\n        let url = ''\r\n        url = 'http://localhost:5000/api/v1/personalFeeds/'+String(localStorage.getItem('name'))\r\n        axios.post('http://localhost:5000/api/v1/clearScroll',{}).then(response=>{\r\n            this.getPersonalFeed(url);\r\n        })\r\n    }\r\n\r\n    getPersonalFeed=(url)=>{\r\n        console.log(url)\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState === 4 && xhr.status === 200){\r\n\r\n                let feedData = [...this.state.feeds]\r\n                const data = JSON.parse(xhr.responseText)\r\n                const len = data.length\r\n\r\n                for(let i=0;i<len;i++){\r\n                    feedData.push(data[i])\r\n                }\r\n\r\n                this.setState({\r\n                    feeds : feedData,\r\n                    loading : false\r\n                })\r\n\r\n                console.log('[FEEWEWE] : ', this.state.feeds)\r\n\r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        this.setState({\r\n            loading : true\r\n        })\r\n        xhr.send()\r\n\r\n    };\r\n\r\n    handleScroll = e => {\r\n        let url = ''\r\n        url = 'http://localhost:5000/api/v1/personalFeeds/'\r\n        let element = e.target\r\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\r\n            this.getPersonalFeed(url)\r\n        }    \r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        let personalContent = null;\r\n\r\n        if(this.state.feeds.length){\r\n            personalContent = this.state.feeds.map((val,ind)=>{\r\n                return(\r\n                    <div key={ind} className={classes.unitCard}>\r\n                        <div>{val.name}</div>\r\n                        <div>{val.communityID}</div>\r\n                    </div>\r\n                )\r\n            })\r\n            personalContent = (  \r\n                <div className={classes.feedList} onScroll={this.handleScroll}>\r\n                    <h3>PERSONAL FEEDS</h3>\r\n                    <div className={classes.container}>{personalContent}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <div className={classes.feedContainer}>\r\n                {personalContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() ),\r\n      // onLogout\r\n    };\r\n  };\r\n  \r\n  export default ( connect( mapStateToProps, mapDispatchToProps )( PersonalFeeds ) );","import React, { Component } from 'react';\r\nimport { CircularProgress,Paper, Divider, createGenerateClassName } from '@material-ui/core';\r\nimport classes from './HomePage.module.css';\r\nimport axios from 'axios';\r\nimport {Switch,Route,withRouter} from 'react-router-dom';\r\nimport GeneralFeeds from '../GeneralFeeds/GeneralFeeds';\r\nimport {connect} from 'react-redux'\r\nimport PersonalFeeds from '../PersonalFeeds/PersonalFeeds';\r\nimport * as actions from '../../store/actions/index';\r\n// import ReactRotatingText from './Type/ReactRotatingText'\r\nimport Typist from 'react-typist';\r\n\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\n\r\n\r\nclass HomePage extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading : true,\r\n            recommended : []\r\n        };\r\n        \r\n    }\r\n\r\n   \r\n\r\n    getReco = () =>{\r\n        console.log('[GETTING RECOMMENDATION]')\r\n\r\n        const url = 'http://localhost:5000/api/v1/personalFeeds/'+String(localStorage.getItem('name'))\r\n\r\n        axios.get(url).then(resp =>{\r\n            const url = 'http://localhost:5000/user_recommendations/' + String(localStorage.getItem('userId'))\r\n            \r\n            const comList = []\r\n            resp.data.map((val,ind)=>{\r\n                comList.push(val.communityID)\r\n            })\r\n            \r\n            axios.post(url,{ 'community_list' : comList })\r\n            .then(response => {\r\n\r\n                this.setState({\r\n                    recommended : response.data.result\r\n                })\r\n                console.log('[RECOMMENDATIONS] : ', this.state.recommended)\r\n\r\n            })\r\n            \r\n\r\n        })\r\n        \r\n    }\r\n  \r\n    componentDidMount(){\r\n        if(!this.props.isAuthenticated){\r\n            this.props.onTryAutoSignup();\r\n        }\r\n        this.getReco()\r\n\r\n        window.addEventListener('scroll', this.handleScroll, true);\r\n        let url = ''\r\n        url = 'http://localhost:5000/api/v1/generalFeeds/'\r\n        axios.post('http://localhost:5000/api/v1/clearScroll',{}).then(response=>{})\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    render(){\r\n       \r\n        let content = (\r\n            <Switch>\r\n                <Route exact path=\"user/personalFeeds\" component = {PersonalFeeds} />\r\n                <Route path=\"/\" component = {GeneralFeeds} />\r\n            </Switch>\r\n        )\r\n\r\n        let recContent = <CircularProgress />\r\n        if(this.state.recommended.length){\r\n            recContent = this.state.recommended.map((val,ind)=>{\r\n                return(\r\n                    <div key={ind} className={classes.unitCard}>\r\n                        <div>{val.name}</div>\r\n                        <div>{val.communityID}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n\r\n        return(\r\n            <div className={classes.root}>\r\n                <h1 style={{backgroundColor:'white'}}>\r\n                    <span style={{color:'skyblue'}} >HEALTH</span>\r\n                    <span style={{color:'tomato'}}>CHAIN</span>\r\n                </h1>\r\n                <div className={classes.recFeedList}>\r\n                        {(this.props.isAuthenticated) ? \r\n                            (<>\r\n                                <h3>RECOMMENDED</h3>\r\n                                <div className={classes.container}>\r\n                                    {recContent}\r\n                                </div>\r\n                            </>\r\n                            ): \r\n                            <h1 style={{color:'rebeccapurple'}}>\r\n                                <Typist>\r\n                                    PLEASE LOGIN TO SUBSCRIBE TO A COMMUNITY\r\n                                </Typist>\r\n                            </h1>\r\n                        }\r\n                    </div>\r\n                    {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() ),\r\n      // onLogout\r\n    };\r\n  };\r\n  \r\n  export default withRouter( connect( mapStateToProps, mapDispatchToProps )( HomePage ) );\r\n  ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// import classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport { withStyles } from '@material-ui/styles';\r\n// import axios from \"axios\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Spinner from '../../../components/UI/Spinner/Spinner';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n      margin: 'theme.spacing(1)',\r\n      fontFamily:'Quicksand',\r\n      fontWeight:'bold'\r\n  },\r\n  container: {\r\n    display: 'flex-block',\r\n    flexWrap: 'wrap',\r\n    padding:40,\r\n  },\r\n  textField: {\r\n    width: 300,\r\n  },\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n});\r\n\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            username: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'username',\r\n                    placeholder: 'Username'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isUsername: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        open: true,\r\n        close: false,\r\n        isSignup: true,\r\n\r\n    }\r\n    \r\n    handleOpen = () =>{\r\n        this.setState({\r\n            open:1\r\n        }) \r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            open:0\r\n        }) \r\n        this.props.history.push(`/`)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity ( value, rules ) {\r\n        let isValid = true;\r\n        if ( !rules ) {\r\n            return true;\r\n        }\r\n\r\n        if ( rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if ( rules.minLength ) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if ( rules.maxLength ) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if ( rules.isEmail ) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n\r\n        if ( rules.isNumeric ) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = ( event, controlName ) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity( event.target.value, this.state.controls[controlName].validation ),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState( { controls: updatedControls } );\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.props.onAuth( this.state.controls.username.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    render () {\r\n\r\n        const { classes } = this.props;\r\n\r\n\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.controls ) {\r\n            formElementsArray.push( {\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            } );\r\n        }\r\n        \r\n        \r\n\r\n        let form = formElementsArray.map( formElement => (\r\n            <>\r\n            <TextField\r\n                required\r\n                key={formElement.id}\r\n                label = {formElement.config.elementConfig.placeholder}\r\n                type={formElement.config.elementConfig.type}\r\n                // name={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                className={classes.textField}\r\n                margin={\"normal\"}\r\n\r\n                // invalid={!formElement.config.valid}\r\n                // shouldValidate={formElement.config.validation}\r\n                // touched={formElement.config.touched}\r\n                onChange={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n                <br/>\r\n            </>\r\n        ) );\r\n\r\n        form = (\r\n          <>\r\n            \r\n            <Typography component=\"h1\" variant=\"h5\" style={ {fontFamily:'Quicksand'}}>\r\n              Log In\r\n            </Typography>\r\n            \r\n            {form}\r\n\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              LOG IN\r\n            </Button>\r\n\r\n          </>\r\n        )\r\n\r\n        \r\n        if (this.props.loading) {\r\n            // form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            return (<Redirect to={this.props.authRedirectPath}/>);\r\n        }\r\n\r\n        return (\r\n            \r\n            <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}>\r\n            \r\n                {/* <div className={classes.Auth}> */}\r\n                \r\n                <Fade in={this.state.open}>\r\n                    <Paper>\r\n                      \r\n                    {authRedirect}\r\n                    {errorMessage}\r\n                    \r\n                        <form onSubmit={this.submitHandler} \r\n                        className={classes.container}>\r\n\r\n                            {form}\r\n\r\n                        </form>\r\n                    </Paper>\r\n                </Fade>\r\n                {/* </div> */}\r\n            \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: ( username, password, isSignup ) => dispatch( actions.auth( username, password, isSignup ) ),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(  withStyles(styles)(Auth) );","import React from 'react';\r\nimport classes from './ComPost.module.css';\r\nimport { Paper, Divider } from '@material-ui/core';\r\n\r\n\r\nclass PostCard extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    render(){\r\n\r\n        // console.log('m')\r\n        return(\r\n            <Paper className={classes.postCard} elevation={16} square>\r\n                <div>\r\n                    <img />\r\n                    <span className={classes.mainSpan}>\r\n                        <span className={classes.detSpan}>author : </span> \r\n                        <span  className={classes.detVal}>{this.props.author}</span>\r\n                        <Divider />\r\n                        <span className={classes.detSpan}>time : </span>   \r\n                        <span className={classes.detVal}>{this.props.time}</span>\r\n                    </span>\r\n                </div>\r\n                <Divider/>\r\n                <div>\r\n                    <p>\r\n                        {this.props.data}\r\n                    </p>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostCard;","import React, { Component } from 'react';\r\nimport { Paper, Input, Button, Divider, TextField } from '@material-ui/core';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index'\r\nimport Axios from 'axios';\r\n\r\nclass Post extends Component{\r\n\r\n    state = {\r\n        show : false,\r\n        msg : ''\r\n    }\r\n\r\n    postData=(communityID)=>{\r\n\r\n        const msg = this.state.msg\r\n        const author = this.props.username\r\n        const url = 'http://localhost:5000/api/v1/post'\r\n        \r\n        if(!msg.length)\r\n            return 0;\r\n\r\n        Axios.post(url,{\r\n            'communityID' : communityID,\r\n            'author' : author,\r\n            'msg' : msg\r\n        }).then(response => {\r\n            this.setState({\r\n                msg : ''\r\n            })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let data = <div onMouseOut={()=>this.setState({show : true})}\r\n                        onMouseOver={()=>this.setState({show : true})} \r\n                        style={{width:'100%',height:'20px',backgroundColor:'red'}} >\r\n                        here\r\n                    </div>\r\n\r\n        let val = (\r\n            <>\r\n            \r\n            <h5>POST SOMETHING</h5>\r\n            <Divider />\r\n            <br></br>\r\n                <TextField multiline type=\"text\" onChange = {(e)=>{this.setState({ msg : e.target.value })}} value={this.state.msg} />\r\n                <br></br>\r\n                <div style={{display:'flex',justifyContent:'space-evenly'}}>\r\n                    <Button variant='contained' color=\"primary\" onClick={this.props.clicked,()=>this.postData(this.props.activePost)}>\r\n                        Post\r\n                    </Button>\r\n                    <Button variant='contained' color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n                \r\n            </>\r\n        )\r\n\r\n        if(this.state.show){\r\n            val = null;\r\n        }\r\n\r\n        return(\r\n            <Paper style={{display:'flex',\r\n                flexDirection:'column',\r\n                padding:'10px',\r\n                width:'25%',\r\n                margin:'20px 20px 0 20px'}}>\r\n                {/* {data} */}\r\n                {val}\r\n\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null,\r\n      username : state.auth.name\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n    };\r\n  };\r\n  \r\n  export default withRouter( connect( mapStateToProps, mapDispatchToProps )( Post ) );\r\n  ","import React, { Component } from 'react';\r\nimport classes from './Community.module.css';\r\nimport ComPost from '../ComPost/ComPost';\r\nimport {Divider,Paper,Box, Button, Fab} from '@material-ui/core';\r\nimport { CircularProgress,FormControlLabel,Fade } from '@material-ui/core';\r\nimport { Cancel, Pages, PostAdd } from '@material-ui/icons'\r\nimport {NavLink,Switch, Route } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n// import prof from '../../img/avatar1.jpg'\r\nimport * as actions from '../../store/actions/index';\r\nimport Axios from 'axios';\r\nimport Post from '../Post/Post';\r\nimport abo from '../../img/Abortion.jpg'\r\nimport air from '../../img/Air.jpg'\r\nimport add from '../../img/Addison.jpg'\r\n\r\nclass Community extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            feeds : [],\r\n            posts : [],\r\n            showPost : false,\r\n            activePost : 0,\r\n            about : [\r\n                'Hello I\\'m a good person',\r\n                '@something.com',\r\n                'asdf',\r\n                'asfasfwer23',\r\n            ],\r\n            msg : '',\r\n            imageList : [\r\n                {title:'Abortion',data : abo},\r\n                {title:'Air',data : air},\r\n                {title:'Addison',data : add}\r\n            ]\r\n        }\r\n    }\r\n\r\n    getPersonalFeed=(url)=>{\r\n        // console.log(url)\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState === 4){\r\n\r\n                if(xhr.status === 200){\r\n                    let feedData = [...this.state.feeds]\r\n                    const data = JSON.parse(xhr.responseText)\r\n                    const len = data.length\r\n\r\n                    for(let i=0;i<len;i++){\r\n                        feedData.push(data[i])\r\n                    }\r\n\r\n                    this.setState({\r\n                        feeds : feedData,\r\n                        loading : false\r\n                    })\r\n\r\n                    console.log('[FEEWEWE] : ', data)\r\n                }\r\n\r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        this.setState({\r\n            loading : true\r\n        })\r\n        xhr.send()\r\n\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(!this.props.isAuthenticated){\r\n            this.props.onTryAutoSignup()\r\n        }\r\n        this.getPersonalFeed('http://localhost:5000/api/v1/personalFeeds/'+String(this.props.username));\r\n        if(this.props.isAuthenticated){\r\n        }\r\n    }\r\n\r\n\r\n    getPosts = (id) =>{\r\n        this.setState({\r\n            activePost : id\r\n        })\r\n        let xhr = null;\r\n        let url = null;\r\n      \r\n        url = 'http://localhost:5000/api/v1/posts/'+id\r\n        \r\n        xhr = new XMLHttpRequest();\r\n        const tempData = null;\r\n\r\n        xhr.onreadystatechange = function() {\r\n            if (xhr.readyState == 4 && xhr.status == 200) {\r\n                this.setState({\r\n                    posts : JSON.parse(xhr.responseText).data\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    posts : []\r\n                })\r\n            }\r\n        }.bind(this);\r\n        \r\n        xhr.open(\"GET\", url, true);\r\n        xhr.send()\r\n\r\n    }\r\n\r\n    handlePost = () =>{\r\n        console.log('HANDLING .... POST')\r\n        this.setState({showPost : false});\r\n        this.getPosts(this.state.activePost)\r\n    }\r\n\r\n    togglePost = () =>{\r\n        this.setState({showPost : !this.state.showPost})\r\n    }\r\n    \r\n    render(){\r\n\r\n        const topFeeds = (this.state.feeds.length) ? this.state.feeds.slice(0,3) : []\r\n\r\n        const communityDetails = (\r\n            <div className={classes.infoPaper}>\r\n                <div className={classes.userDetails}>\r\n                    <h5>\r\n                        {this.props.username}\r\n                    </h5>\r\n                    <img style={{width:'100px'}}/>\r\n                    <br/>\r\n                    <div>\r\n                        {/* <p> she is a good person </p> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.userFeats}>\r\n                    <ul style={{listStyle:'none'}}>\r\n                        {this.state.about.map((val,ind)=>{\r\n                            return(\r\n                                <li>{val}</li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.imageList.map((val,ind)=>(\r\n                        <div className={classes.boxDetails} key={ind}>\r\n                            <ul>\r\n                            <li className={'l3'} style={{color:'black',backgroundImage: `url(${val.data})`}}>\r\n                                    <p>{val.title}</p>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        )\r\n                    )\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n        \r\n        let posts = null;\r\n\r\n        if(this.state.posts.length){\r\n            posts = (\r\n                <>\r\n                {this.state.posts.map((val,ind)=>{\r\n                    return (\r\n                        <ComPost \r\n                            data = {val.data}\r\n                            time = {val.time}\r\n                            author = {val.by}\r\n                        />\r\n                    );\r\n                })}\r\n                </>\r\n            )\r\n        }else{\r\n            posts = <h3 style={{color:\"red\"}}>\r\n                NO POSTS TO SHOW\r\n            </h3>\r\n        }\r\n        \r\n\r\n        let naviGate = null;\r\n        if(this.state.feeds){\r\n            naviGate = (\r\n                <nav>\r\n                    <ul className={classes.navItems}>\r\n\r\n                        {   \r\n                            this.state.feeds.map((val,ind)=>{\r\n                                let cnt = 0;\r\n                                return (\r\n                                    <li key={ind}>\r\n                                        \r\n                                        <NavLink \r\n                                            activeStyle={{color : 'white'}} \r\n                                            // className = {classes.link}\r\n                                            onClick = {()=>this.getPosts(val.communityID)} \r\n                                            style={{textDecoration:'none'}} \r\n                                            to={this.props.match.url + '/' + val.name}>\r\n\r\n                                            <Button variant = 'conatined' color=\"primary\" fontFamily=\"fontFamily\" fontWeight=\"fontWeightLight\" m={1}>\r\n                                                {val.name}\r\n                                            </Button>\r\n\r\n                                        </NavLink>\r\n\r\n                                    </li>            \r\n                                )\r\n                                cnt += 1;\r\n                            })\r\n                        }\r\n\r\n                    </ul>\r\n                </nav>\r\n            );\r\n        }\r\n\r\n        let postVal = null;\r\n        let postIcon = <PostAdd />\r\n\r\n        if(this.state.showPost){\r\n            postVal = <Post activePost = {this.state.activePost} \r\n            clicked={this.handlePost} />\r\n            postIcon = <Cancel />\r\n        }\r\n        postIcon = <Fab  onClick={this.togglePost} checked={this.state.showPost}>\r\n                        {postIcon}\r\n                    </Fab>\r\n\r\n        return (\r\n            <div className={\"mainContent\"}>\r\n                <div className={\"topContent\"}>\r\n                  <h4></h4>\r\n                  <h1>\r\n                    COMMUNITY\r\n                  </h1>\r\n                </div>\r\n                <Divider/>\r\n                \r\n                {communityDetails}\r\n\r\n                <Divider/>\r\n                <Divider/>\r\n\r\n                {naviGate}\r\n\r\n                <Divider />\r\n                <div style={{display:'flex',flexDirection:'row',justifyContent:'space-between',alignItems:'flex-start'}}>\r\n                    <div className={classes.postComponent}>\r\n                        {posts}\r\n                    </div>\r\n                    {/* <div> */}\r\n                    {postVal}\r\n                    {postIcon}\r\n                    {/* </div> */}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null,\r\n      username : state.auth.name\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n    };\r\n  };\r\n  \r\n  export default withRouter( connect( mapStateToProps, mapDispatchToProps )( Community ) );\r\n  ","import React, { Component } from 'react';\r\nimport classes from './UserPage.module.css';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport {connect} from 'react-redux'\r\nimport {Redirect,withRouter} from 'react-router-dom'\r\nimport * as actions from '../../store/actions/index'\r\nimport Community from '../Community/Community';\r\n\r\n\r\nclass UserPage extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bioImg : [],\r\n            bioDetails  : [],\r\n            rightSide : [],\r\n            loading : {\r\n                bioImg : true,\r\n                bioDetails : true,\r\n                rightSide : true\r\n            },\r\n            \r\n        }\r\n    }\r\n\r\n    getBioDetails = () =>{\r\n        let xhr = new XMLHttpRequest()\r\n        let url = 'http://localhost:5000/api/v1/bio/' + String(localStorage.getItem('userData'))\r\n        let oldLoad = this.state.loading\r\n        oldLoad.getBioDetails = true\r\n        this.setState({\r\n            loading : oldLoad\r\n        })\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState === 4 && xhr.status === 200){\r\n                let oldState = this.state.loading\r\n                oldState.bioDetails = false\r\n                this.setState({\r\n                    bioDetails : JSON.parse(xhr.responseText),\r\n                    loading : oldState\r\n                })\r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        xhr.send()\r\n    }\r\n\r\n    getBioImg = () =>{\r\n        let xhr = new XMLHttpRequest()\r\n        let url = 'http://localhost:5000/api/v1/bioImg/' + String(localStorage.getItem('userData'))\r\n        let oldLoad = this.state.loading\r\n        oldLoad.getBioImg = true\r\n        this.setState({\r\n            loading : oldLoad\r\n        })\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState === 4 && xhr.status === 200){\r\n                let oldState = this.state.loading\r\n                oldState.bioImg = false\r\n                this.setState({\r\n                    bioImg : JSON.parse(xhr.responseText),\r\n                    loading : oldState\r\n                })\r\n                \r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        xhr.send()\r\n    }\r\n\r\n    getRightSide = () =>{\r\n        let xhr = new XMLHttpRequest()\r\n        let url = 'http://localhost:5000/api/v1/bioRight/' + String(localStorage.getItem('userData'))\r\n        let oldLoad = this.state.loading\r\n        oldLoad.getBioImg = true\r\n        this.setState({\r\n            loading : oldLoad\r\n        })\r\n        xhr.onreadystatechange = function(){\r\n            if(xhr.readyState === 4 && xhr.status === 200){\r\n                let oldState = this.state.loading\r\n                oldState.rightSide = false\r\n                this.setState({\r\n                    rightSide : JSON.parse(xhr.responseText),\r\n                    loading : oldState\r\n                })\r\n            }\r\n        }.bind(this)\r\n\r\n        xhr.open('GET',url,true)\r\n        xhr.send()\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log('[PROPS] : ', this.props.isAuthenticated)\r\n        // this.getBioDetails()\r\n        // this.getBioImg()\r\n        // this.getRightSide()\r\n    }\r\n\r\n    render(){\r\n        \r\n        if(!this.props.isAuthenticated){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        let bioDetails = <CircularProgress />\r\n        let bioImg = <CircularProgress />\r\n        let rightSide = <CircularProgress />\r\n        if(!this.state.loading.bioDetails){\r\n            bioDetails = this.state.bioDetails.map((val,ind)=>{\r\n                return(\r\n                    <li key={ind}> {val} </li>\r\n                )\r\n            })\r\n        }\r\n        if(!this.state.loading.bioImg){\r\n            bioImg = this.state.bioImg.map((val,ind)=>{\r\n                return (\r\n                    <li key={ind}> {val} </li>\r\n                )\r\n            })\r\n        }\r\n        if(!this.state.loading.rightSide){\r\n            rightSide = this.state.rightSide.map((val,ind)=>{\r\n                return(\r\n                    <li key={ind}> {val} </li>\r\n                )\r\n            })\r\n        }\r\n\r\n        let detailsPage = (\r\n            <div className={classes.infoContainer}>\r\n                <div className={classes.bioImg}>\r\n                    {bioImg}\r\n                </div>\r\n                \r\n                <div className={classes.bioDetails}>\r\n                    {bioDetails}\r\n                </div>\r\n\r\n                <div className={classes.rightSide}>\r\n                    {rightSide}\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n        let navList = null\r\n        navList = (\r\n           <p>asd</p>\r\n        )\r\n\r\n        return(\r\n            <div className={classes.root}>\r\n                <div className={classes.communityPage}>\r\n                    <Community />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n    };\r\n  };\r\n  \r\n  export default withRouter( connect( mapStateToProps, mapDispatchToProps )( UserPage ) );\r\n  ","import React, { Component } from 'react';\r\n// import { BrowserRouter,Redirect } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport axios from \"axios\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { CircularProgress } from '@material-ui/core';\r\n// import Spinner from '../../../components/UI/Spinner/Spinner'\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: 'theme.spacing(1)',\r\n    fontFamily:'Quicksand',\r\n    fontWeight:'bold'\r\n  },\r\n  container: {\r\n    display: 'flex-block',\r\n    flexWrap: 'wrap',\r\n    padding:40,\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width:\"70%\"\r\n  }\r\n  \r\n});\r\n\r\n\r\n\r\nclass Register extends Component\r\n{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            open:1,\r\n            password:\"\",\r\n            name:\"\",\r\n            adresss:\"\",\r\n            email:\"\",\r\n            phone:\"\",\r\n            city:\"\",\r\n            age:\"\",\r\n            username:\"\",\r\n            loading : false\r\n\r\n        }\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.setState({\r\n          loading : true\r\n        })\r\n        axios.post('http://localhost:5000/api/v1/register',\r\n        {'username':this.state.name.trim() ,'password':this.state.password.trim(),\r\n          'email':this.state.email.trim(),'age':this.state.age.trim(),\r\n          'phone':this.state.phone.trim(),'address':this.state.address.trim(),\r\n          'city':this.state.city.trim(),'name':this.state.name.trim()})\r\n        .then( response => {\r\n            let responseData = response;\r\n            if(responseData.data.userData){\r\n                sessionStorage.setItem(\"userData\", responseData.data.userData)\r\n            }\r\n            this.setState({\r\n                open:0,\r\n                loading : false\r\n            });\r\n            this.props.history.push('/');\r\n        });\r\n        \r\n      }\r\n\r\n    handleOpen = () =>{\r\n        this.setState({\r\n            open:1\r\n        }) \r\n    }\r\n\r\n    handleClose = () =>{\r\n        this.setState({\r\n            open:0\r\n        }) \r\n        this.props.history.push(`/`)\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name] : e.target.value });\r\n     }\r\n    \r\n\r\n\r\n    render(){\r\n      const { classes } = this.props;\r\n\r\n\r\n      let form = (\r\n         <>\r\n            <Typography component=\"h1\" variant=\"h5\" style={{fontFamily:'Quicksand'}}>\r\n            Sign Up\r\n            </Typography>\r\n            \r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"name\"\r\n                  label=\"Name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"username\"\r\n                  label=\"User Name\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  value={this.state.password}\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  label=\"Address\"\r\n                  name='address'\r\n                  fullWidth\r\n                  multiline\r\n                  rowsMax=\"4\"\r\n                  value={this.state.address}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                /> \r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Ph No\"\r\n                  name=\"phone\"\r\n                  value={this.state.phone}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"City\"\r\n                  name=\"city\"\r\n                  value={this.state.city}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Age\"\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={this.state.age}\r\n                  onChange={this.handleChange.bind(this)}\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <p><br/></p>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>\r\n           SIGN UP\r\n          </Button>\r\n        </>\r\n\r\n      );\r\n\r\n      if(this.state.loading){\r\n        form  = (\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            <CircularProgress />\r\n            {/* <Spinner /> */}\r\n          </Grid>\r\n\r\n        )\r\n      }\r\n\r\n\r\n      return (\r\n    \r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        \r\n        <Fade in={this.state.open}>\r\n          <Paper style={{position:'absolute',left:\"400px\"}}>\r\n            <form onSubmit={this.handleSubmit} className={classes.container} noValidate autoComplete=\"off\">\r\n              {form}  \r\n            </form>\r\n          </Paper>\r\n        </Fade>\r\n      </Modal>         \r\n  );\r\n}\r\n}\r\n\r\nexport default withStyles(styles)(Register);","import React, { Component } from 'react';\nimport {withRouter, Redirect,Route, Switch} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport TopBar from './containers/TopBar/TopBar';\nimport './App.css';\nimport SideBar from './containers/SideBar/SideBar';\nimport HomePage from './containers/HomePage/HomePage';\nimport Login from './containers/Login/Login';\nimport UserPage from './containers/UserPage/UserPage';\nimport Register from './containers/Register/Register';\nimport GeneralFeeds from './containers/GeneralFeeds/GeneralFeeds';\nimport PersonalFeeds from './containers/PersonalFeeds/PersonalFeeds';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      showSideBar : true\n    }\n  }\n\n  componentDidMount(){\n    if(!this.props.isAuthenticated)\n      this.props.onTryAutoSignup()\n  }\n\n  render(){\n\n    let mainBody = (\n      <Switch>\n        \n        \n        <Route exact path='/login' component = {Login} />\n        <Route exact path='/register' component = {Register} />\n        <Route exact path='/generalFeeds' component = {GeneralFeeds} />\n        <Route exact path='/personalFeeds' component = {PersonalFeeds} />\n        <Route exact path='/logout' render = {()=>{\n            return (<Redirect to='/' />)\n          }} />\n        \n        <Route path=\"/user\" component={UserPage} />\n        <Route exact path=\"/\" component={HomePage} />\n\n      </Switch>\n  );\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <TopBar toggleSideBar = {()=>{\n            this.setState({showSideBar : !this.state.showSideBar})\n            }}\n          />\n        </header>\n\n        <div className={'main-box'}>\n          \n          <SideBar show={this.state.showSideBar} />\n          <main className={'content-box'}>\n            \n            {mainBody}\n\n          </main>\n\n        </div>\n      </div>\n    )\n  ;}\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() ),\n    // onLogout\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    name: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    \n    //set credentials\n    // Name is used as token\n\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        name: action.name,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n\n    //report error\n\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    //simply clear data\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    //redirect to the path\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n// import { addFriendToGroup } from '../actions/groupFunctions';\r\n// import { fetchGroupSuccess } from '../actions/userFunctions';\r\n\r\n\r\nconst initialState = {\r\n    groupList : null,\r\n    friendList : null,\r\n    error : null,\r\n    loading : false,\r\n    groupId : null,\r\n    groupDetails : null,\r\n    friendDetails : null,\r\n};\r\n\r\n\r\nconst clearUserDetails = (state,action) => {\r\n    return updateObject(state,\r\n        {\r\n            groupList : null,\r\n            friendList : null,\r\n            error : null,\r\n            loading : false,\r\n            groupId : null,\r\n            groupDetails : null,\r\n            friendDetails : null\r\n        }\r\n    )\r\n}\r\n\r\n// const getRecommendation = (state, action) => {\r\n//     return updateObject(state,\r\n//         {\r\n\r\n//         })\r\n// }\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch ( action.type ){\r\n        \r\n        // fetching groups\r\n\r\n        default : \r\n            return state\r\n            \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\n\nimport authReducer from './store/reducers/auth';\nimport userReducer from './store/reducers/userDetails';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    userDetails : userReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n// registerServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"HomePage_root__3kagn\",\"feedList\":\"HomePage_feedList__30HSR\",\"container\":\"HomePage_container__25jDt\",\"recFeedList\":\"HomePage_recFeedList__uAM9A\",\"unitCard\":\"HomePage_unitCard__1QhX7\",\"feedContainer\":\"HomePage_feedContainer__3Ebz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopBar_container__1FozO\",\"topBar\":\"TopBar_topBar__3Nroe\",\"linkers\":\"TopBar_linkers__fPR7i\",\"searchInput\":\"TopBar_searchInput__2P0G0\",\"recDiv\":\"TopBar_recDiv__1CGGM\",\"throttleList\":\"TopBar_throttleList__1Yzwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SideBar_container__2MRNu\",\"sideBar\":\"SideBar_sideBar__7L9as\",\"linkers\":\"SideBar_linkers__FVPB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"UserPage_infoContainer__1Xdrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Community_container__32oxR\",\"navBar\":\"Community_navBar__1nCNH\",\"mainContent\":\"Community_mainContent__3ONR_\",\"infoPaper\":\"Community_infoPaper__WEpMT\",\"postComponent\":\"Community_postComponent__-j5Wb\",\"boxDetails\":\"Community_boxDetails__rvXFS\",\"userDetails\":\"Community_userDetails__4SqAD\",\"navItems\":\"Community_navItems__2YghS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"ComPost_postCard__2ZpC2\",\"detSpan\":\"ComPost_detSpan__1nfYE\",\"detVal\":\"ComPost_detVal__34L0k\",\"mainSpan\":\"ComPost_mainSpan__22Rha\"};","module.exports = __webpack_public_path__ + \"static/media/Abortion.edd5f4aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Air.e2ff2e37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Addison.4a41ea61.jpg\";"],"sourceRoot":""}